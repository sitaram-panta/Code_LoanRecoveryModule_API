// <auto-generated />
using System;
using LoanRecovery.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanRecovery.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231225063148_addedCompanyshareholderTableRemoveCompanychangedwithCompanyInfoId")]
    partial class addedCompanyshareholderTableRemoveCompanychangedwithCompanyInfoId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoanRecovery.Migrations.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("LoanRecovery.Migrations.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("LoanRecovery.Migrations.Models.LoanFacilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoanRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoanRefId");

                    b.ToTable("LoanFacilities");
                });

            modelBuilder.Entity("LoanRecovery.Migrations.Models.LoanPaymentLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DisburshedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoanRefId")
                        .HasColumnType("int");

                    b.Property<decimal>("OutstandingPrincipal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RemainingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LoanRefId");

                    b.ToTable("LoanPaymentLogs");
                });

            modelBuilder.Entity("LoanRecovery.Migrations.Models.LoanReminderLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasNextReminderSchedule")
                        .HasColumnType("bit");

                    b.Property<int>("LoanRefId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NextReminderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reminder")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReminderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanRefId");

                    b.ToTable("LoanReminderLog");
                });

            modelBuilder.Entity("LoanRecovery.Migrations.Models.LoanSecurities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("FMV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoanRefId")
                        .HasColumnType("int");

                    b.Property<decimal>("MV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SecurityType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoanRefId");

                    b.ToTable("LoanSecurities");
                });

            modelBuilder.Entity("LoanRecovery.Migrations.Models.OTPVerificationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneratedOTPCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OTPVerificationLogs");
                });

            modelBuilder.Entity("LoanRecovery.Models.AuctionBidder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BidDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BidderAmount")
                        .HasColumnType("int");

                    b.Property<int>("BidderInfo")
                        .HasColumnType("int");

                    b.Property<bool>("IsAwarded")
                        .HasColumnType("bit");

                    b.Property<int>("LoanRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BidderInfo");

                    b.HasIndex("LoanRefId");

                    b.ToTable("AuctionBidders");
                });

            modelBuilder.Entity("LoanRecovery.Models.AuctionPayments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BidderInfo")
                        .HasColumnType("int");

                    b.Property<string>("CBSRefCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DigitalRefCopy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoanRefId")
                        .HasColumnType("int");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BidderInfo");

                    b.HasIndex("LoanRefId");

                    b.ToTable("AuctionPayments");
                });

            modelBuilder.Entity("LoanRecovery.Models.AuctionableLoans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AuctionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AuctionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoanRefId")
                        .HasColumnType("int");

                    b.Property<decimal>("MinAuctionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LoanRefId");

                    b.ToTable("AuctionableLoans");
                });

            modelBuilder.Entity("LoanRecovery.Models.CompanyInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyInfoId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PanNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegdNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyInfoId");

                    b.ToTable("CompanyInfos");
                });

            modelBuilder.Entity("LoanRecovery.Models.CompanyShareholder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GeneralId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegdDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SharePercent")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GeneralId");

                    b.ToTable("CompanyShareholders");
                });

            modelBuilder.Entity("LoanRecovery.Models.Defaulter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AccuredInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DisburshedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DueInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DuePrincipal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoanCamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OutstandingPrincipal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Defaulters");
                });

            modelBuilder.Entity("LoanRecovery.Models.GeneralCompanyPersonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyShareholderId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<int>("PersonInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyInfoId");

                    b.HasIndex("CompanyShareholderId");

                    b.HasIndex("PersonInfoId");

                    b.ToTable("GeneralCompanyPersonEntities");
                });

            modelBuilder.Entity("LoanRecovery.Models.LegalNoticeSentLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DigitalCopyFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoanRefId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SendMedium")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoanRefId");

                    b.ToTable("legalNoticeSentLogs");
                });

            modelBuilder.Entity("LoanRecovery.Models.LegalNoticeableLoans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoanRefId")
                        .HasColumnType("int");

                    b.Property<int>("NoticeStage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoanRefId");

                    b.ToTable("LegalNoticeableLoans");
                });

            modelBuilder.Entity("LoanRecovery.Models.LoanGuaranters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GeneralId")
                        .HasColumnType("int");

                    b.Property<decimal>("GuaranteePercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoanRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeneralId");

                    b.HasIndex("LoanRefId");

                    b.ToTable("LoanGuaranters");
                });

            modelBuilder.Entity("LoanRecovery.Models.LoanMembers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GeneralId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPrimaryLoanee")
                        .HasColumnType("bit");

                    b.Property<int>("LoanRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeneralId");

                    b.HasIndex("LoanRefId");

                    b.ToTable("LoanMembers");
                });

            modelBuilder.Entity("LoanRecovery.Models.PersonalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitizenshiipNO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CitizenshipIssueData")
                        .HasColumnType("datetime2");

                    b.Property<string>("CitizenshipIssueDistrict")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FatherInfoId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MotherInfoId")
                        .HasColumnType("int");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FatherInfoId");

                    b.HasIndex("MotherInfoId");

                    b.ToTable("PersonalInfos");
                });

            modelBuilder.Entity("LoanRecovery.Models.RemindableLoans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasDisableReminder")
                        .HasColumnType("bit");

                    b.Property<int>("LoanRefId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReminderEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReminderStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LoanRefId");

                    b.ToTable("RemindableLoans");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LoanRecovery.Migrations.Models.LoanFacilities", b =>
                {
                    b.HasOne("LoanRecovery.Models.Defaulter", "Defaulter")
                        .WithMany("LoanFacilities")
                        .HasForeignKey("LoanRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defaulter");
                });

            modelBuilder.Entity("LoanRecovery.Migrations.Models.LoanPaymentLog", b =>
                {
                    b.HasOne("LoanRecovery.Models.Defaulter", "Defaulter")
                        .WithMany("LoanPaymentLogs")
                        .HasForeignKey("LoanRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defaulter");
                });

            modelBuilder.Entity("LoanRecovery.Migrations.Models.LoanReminderLog", b =>
                {
                    b.HasOne("LoanRecovery.Models.Defaulter", "Defaulter")
                        .WithMany()
                        .HasForeignKey("LoanRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defaulter");
                });

            modelBuilder.Entity("LoanRecovery.Migrations.Models.LoanSecurities", b =>
                {
                    b.HasOne("LoanRecovery.Models.Defaulter", "Defaulter")
                        .WithMany("LoanSecurities")
                        .HasForeignKey("LoanRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defaulter");
                });

            modelBuilder.Entity("LoanRecovery.Models.AuctionBidder", b =>
                {
                    b.HasOne("LoanRecovery.Models.GeneralCompanyPersonEntity", "GeneralCompanyPersonEntity")
                        .WithMany("AuctionBidders")
                        .HasForeignKey("BidderInfo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanRecovery.Models.Defaulter", "Defaulter")
                        .WithMany("AuctionBidders")
                        .HasForeignKey("LoanRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defaulter");

                    b.Navigation("GeneralCompanyPersonEntity");
                });

            modelBuilder.Entity("LoanRecovery.Models.AuctionPayments", b =>
                {
                    b.HasOne("LoanRecovery.Models.GeneralCompanyPersonEntity", "GeneralCompanyPersonEntity")
                        .WithMany("AuctionPayments")
                        .HasForeignKey("BidderInfo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanRecovery.Models.Defaulter", "Defaulter")
                        .WithMany("AuctionPayments")
                        .HasForeignKey("LoanRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defaulter");

                    b.Navigation("GeneralCompanyPersonEntity");
                });

            modelBuilder.Entity("LoanRecovery.Models.AuctionableLoans", b =>
                {
                    b.HasOne("LoanRecovery.Models.Defaulter", "Defaulter")
                        .WithMany("AuctionableLoans")
                        .HasForeignKey("LoanRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defaulter");
                });

            modelBuilder.Entity("LoanRecovery.Models.CompanyInfo", b =>
                {
                    b.HasOne("LoanRecovery.Models.CompanyShareholder", null)
                        .WithMany("CompanyInfos")
                        .HasForeignKey("CompanyInfoId");
                });

            modelBuilder.Entity("LoanRecovery.Models.CompanyShareholder", b =>
                {
                    b.HasOne("LoanRecovery.Models.GeneralCompanyPersonEntity", "GeneralCompanyPersonEntity")
                        .WithMany()
                        .HasForeignKey("GeneralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralCompanyPersonEntity");
                });

            modelBuilder.Entity("LoanRecovery.Models.Defaulter", b =>
                {
                    b.HasOne("LoanRecovery.Migrations.Models.Branch", "Branch")
                        .WithMany("Defaulters")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("LoanRecovery.Models.GeneralCompanyPersonEntity", b =>
                {
                    b.HasOne("LoanRecovery.Models.CompanyInfo", "CompanyInfo")
                        .WithMany()
                        .HasForeignKey("CompanyInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanRecovery.Models.CompanyShareholder", null)
                        .WithMany("GeneralCompanyPersonEntities")
                        .HasForeignKey("CompanyShareholderId");

                    b.HasOne("LoanRecovery.Models.PersonalInfo", "PersonalInfo")
                        .WithMany("generalCompanyPersonEntities")
                        .HasForeignKey("PersonInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyInfo");

                    b.Navigation("PersonalInfo");
                });

            modelBuilder.Entity("LoanRecovery.Models.LegalNoticeSentLog", b =>
                {
                    b.HasOne("LoanRecovery.Models.Defaulter", "Defaulter")
                        .WithMany("LegalNoticeSentLogs")
                        .HasForeignKey("LoanRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defaulter");
                });

            modelBuilder.Entity("LoanRecovery.Models.LegalNoticeableLoans", b =>
                {
                    b.HasOne("LoanRecovery.Models.Defaulter", "Defaulter")
                        .WithMany("LegalNoticeableLoans")
                        .HasForeignKey("LoanRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defaulter");
                });

            modelBuilder.Entity("LoanRecovery.Models.LoanGuaranters", b =>
                {
                    b.HasOne("LoanRecovery.Models.GeneralCompanyPersonEntity", "GeneralCompanyPersonEntity")
                        .WithMany("LoanGuaranters")
                        .HasForeignKey("GeneralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanRecovery.Models.Defaulter", "Defaulter")
                        .WithMany("LoanGuaranters")
                        .HasForeignKey("LoanRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defaulter");

                    b.Navigation("GeneralCompanyPersonEntity");
                });

            modelBuilder.Entity("LoanRecovery.Models.LoanMembers", b =>
                {
                    b.HasOne("LoanRecovery.Models.GeneralCompanyPersonEntity", "GeneralCompanyPersonEntity")
                        .WithMany("LoanMembers")
                        .HasForeignKey("GeneralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanRecovery.Models.Defaulter", "Defaulter")
                        .WithMany("LoanMembers")
                        .HasForeignKey("LoanRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defaulter");

                    b.Navigation("GeneralCompanyPersonEntity");
                });

            modelBuilder.Entity("LoanRecovery.Models.PersonalInfo", b =>
                {
                    b.HasOne("LoanRecovery.Models.PersonalInfo", "FatherInfo")
                        .WithMany()
                        .HasForeignKey("FatherInfoId");

                    b.HasOne("LoanRecovery.Models.PersonalInfo", "MotherInfo")
                        .WithMany()
                        .HasForeignKey("MotherInfoId");

                    b.Navigation("FatherInfo");

                    b.Navigation("MotherInfo");
                });

            modelBuilder.Entity("LoanRecovery.Models.RemindableLoans", b =>
                {
                    b.HasOne("LoanRecovery.Models.Defaulter", "Defaulter")
                        .WithMany("RemindableLoans")
                        .HasForeignKey("LoanRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defaulter");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LoanRecovery.Migrations.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LoanRecovery.Migrations.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanRecovery.Migrations.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LoanRecovery.Migrations.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanRecovery.Migrations.Models.Branch", b =>
                {
                    b.Navigation("Defaulters");
                });

            modelBuilder.Entity("LoanRecovery.Models.CompanyShareholder", b =>
                {
                    b.Navigation("CompanyInfos");

                    b.Navigation("GeneralCompanyPersonEntities");
                });

            modelBuilder.Entity("LoanRecovery.Models.Defaulter", b =>
                {
                    b.Navigation("AuctionBidders");

                    b.Navigation("AuctionPayments");

                    b.Navigation("AuctionableLoans");

                    b.Navigation("LegalNoticeSentLogs");

                    b.Navigation("LegalNoticeableLoans");

                    b.Navigation("LoanFacilities");

                    b.Navigation("LoanGuaranters");

                    b.Navigation("LoanMembers");

                    b.Navigation("LoanPaymentLogs");

                    b.Navigation("LoanSecurities");

                    b.Navigation("RemindableLoans");
                });

            modelBuilder.Entity("LoanRecovery.Models.GeneralCompanyPersonEntity", b =>
                {
                    b.Navigation("AuctionBidders");

                    b.Navigation("AuctionPayments");

                    b.Navigation("LoanGuaranters");

                    b.Navigation("LoanMembers");
                });

            modelBuilder.Entity("LoanRecovery.Models.PersonalInfo", b =>
                {
                    b.Navigation("generalCompanyPersonEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
